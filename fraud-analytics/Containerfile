FROM registry.access.redhat.com/ubi9/ubi:9.3 as tf-builder

WORKDIR /opt/tensorflow-build

RUN curl "https://raw.githubusercontent.com/ppc64le/build-scripts/master/t/tensorflow/tensorflow_2.18.1_ubi9.3.sh" > tensorflow_2.18.1_ubi9.3.sh && \
    curl "https://raw.githubusercontent.com/ppc64le/build-scripts/master/t/tensorflow/tf_2.18.1_fix.patch" > tf_2.18.1_fix.patch

RUN chmod +x tensorflow_2.18.1_ubi9.3.sh && \
    ./tensorflow_2.18.1_ubi9.3.sh

FROM registry.access.redhat.com/ubi9/ubi:9.3 AS openblas-builder

ARG MAX_JOBS
ARG OPENBLAS_VERSION=0.3.29
RUN dnf install -y gcc-toolset-13 make wget unzip \
    && source /opt/rh/gcc-toolset-13/enable \
    && wget https://github.com/OpenMathLib/OpenBLAS/releases/download/v$OPENBLAS_VERSION/OpenBLAS-$OPENBLAS_VERSION.zip \
    && unzip OpenBLAS-$OPENBLAS_VERSION.zip \
    && cd OpenBLAS-$OPENBLAS_VERSION \
    &&  make -j8 TARGET=POWER9 BINARY=64 USE_OPENMP=1 USE_THREAD=1 NUM_THREADS=120 DYNAMIC_ARCH=1 INTERFACE64=0

FROM registry.access.redhat.com/ubi9/ubi:9.3 as h5py-builder

WORKDIR /opt/h5py-build

RUN curl "https://raw.githubusercontent.com/ppc64le/build-scripts/master/h/h5py/h5py_3.13.0_ubi_9.3.sh" > h5py_3.13.0_ubi_9.3.sh

RUN chmod +x h5py_3.13.0_ubi_9.3.sh && \
    ./h5py_3.13.0_ubi_9.3.sh

FROM registry.access.redhat.com/ubi9/ubi:9.3 as final-build

ARG OPENBLAS_VERSION=0.3.29

RUN dnf install -y gcc-c++ python3.12-devel python3.12-pip \
    cmake git openssl openssl-devel git gcc-toolset-13 gcc-toolset-13-gcc-c++ gcc-gfortran && \
    dnf clean all

RUN python3.12 -m venv /opt/venv

RUN PACKAGE_NAME=grpc && \
    PACKAGE_VERSION=${1:-v1.70.0} && \
    PACKAGE_URL=https://github.com/grpc/grpc.git && \
    git clone $PACKAGE_URL &&\
    cd $PACKAGE_NAME/ && \
    git checkout $PACKAGE_VERSION && \
    git submodule update --init --recursive&& \
    source /opt/venv/bin/activate && pip3.12 install --no-cache-dir setuptools coverage cython protobuf==4.25.8 wheel cmake==3.* && \
    export GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=true && \
    export GRPC_PYTHON_BUILD_WITH_CYTHON=1 && \
    export PATH="/opt/rh/gcc-toolset-13/root/usr/bin:${PATH}" && \
    pip3.12 install --no-cache-dir . && \
    cd ../ && rm -rf $PACKAGE_NAME

WORKDIR /opt/wheels
COPY --from=h5py-builder /opt/h5py-build/*.whl .
COPY --from=tf-builder /opt/tensorflow-build/*.whl .
COPY --from=tf-builder /install-deps/hdf5/lib /opt/hdf5lib

COPY --from=openblas-builder /OpenBLAS-$OPENBLAS_VERSION /opt/openblas
RUN PREFIX=/usr/local make -C /opt/openblas install
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:/opt/hdf5lib
ENV PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig

COPY requirements.txt .
RUN source /opt/venv/bin/activate && \
    pip3.12 install --no-cache-dir -r requirements.txt *.whl

FROM registry.access.redhat.com/ubi9/ubi:9.3

RUN dnf install -y python3.12 python3.12-pip git git-lfs && dnf clean all

COPY --from=final-build /opt/venv /opt/venv
COPY --from=final-build /usr/local/lib /usr/local/lib
COPY --from=final-build /usr/lib64 /usr/lib64
COPY --from=final-build /opt/hdf5lib /opt/hdf5lib

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib64:/usr/local/lib:/opt/hdf5lib
ENV PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib64/pkgconfig:/usr/local/lib/pkgconfig

WORKDIR /opt/fraud_analytics
COPY train/* ./train/
COPY linux_inference_endpoint.py .

EXPOSE 5000

CMD ["/opt/venv/bin/python3.12", "linux_inference_endpoint.py"]
